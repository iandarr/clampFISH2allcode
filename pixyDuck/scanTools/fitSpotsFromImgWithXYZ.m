function Tspots=fitSpotsFromImgWithXYZ(img,Xs,Ys,varargin)
assert(isequal(size(Xs),size(Ys)))

% for some reason need to switch X,Y for fitSpotPositionsThenRefineForAmplitude2
temp=Xs;
Xs=Ys;
Ys=temp;

if nargin==3
    Zs=ones(size(Xs)); % single-plane images
elseif nargin==4
    Zs=varargin{1};
end
assert(isequal(size(Xs),size(Ys)))
assert(isequal(size(Xs),size(Zs)))

    filterParams=improc2.aTrousFilterParams(struct('sigma',0.5,'numLevels',3));
    filteredImg=improc2.utils.applyATrousImageFilter(img, filterParams);

%             [pData.storedFittedSpots, pData.storedFittedBackgLevels] = ...
%                 improc2.fitting.fitSpotPositionsThenRefineForAmplitude(...
%                 filteredImg, croppedImg, Xs, Ys, Zs);

            [storedFittedSpots, storedFittedBackgLevels] = ...
                fitSpotPositionsThenRefineForAmplitude2(...
                filteredImg, img, Xs, Ys, Zs);
            % fitSpotPositionsThenRefineForAmplitude2 is modified with new fitting parameters
            
   Tspots=array2table([...
        Xs,...
        Ys,...
        Zs,...
        [storedFittedSpots(:).xCenter]',...
        [storedFittedSpots(:).yCenter]',...
        [storedFittedSpots(:).sigma]',...
        [storedFittedSpots(:).amplitude]',...
        [storedFittedSpots(:).zPlane]',...
        storedFittedBackgLevels'],...
        'VariableNames',{'x','y','z','xCenter','yCenter','sigma','amplitude','zPlane','BackgLevel'});
end